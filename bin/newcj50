#!/usr/bin/env bash
set -euo pipefail
# enable job control consistently, not just when there is a tty:
set -m
IFS=

usage() {
    echo "usage: $0 file.c"
    echo "  Creates the given file and fills it with a template"
    echo "  that includes cj50.h."
    echo
    echo "  Options:"
    echo
    echo "   --old   By default $0 creates a template with Result style"
    echo "           error handling scaffolding; this option instead "
    echo "           makes it create a C style 'main' function."
    exit 0
}

warn() {
    echo "$@" >&2
}


if [ $# -lt 1 ]; then
    usage
fi
if [ "$1" = -h -o "$1" = --help ]; then
    usage
fi

opt_old=0
if [ "$1" = --old ]; then
    opt_old=1
    shift
fi


old() {
cat <<EOF
int main(int argc, char** argv) {
    
}
EOF
}

new() {
cat <<EOF
Result(Unit, String) run(UNUSED slice(cstr) argv) {
    BEGIN_Result(Unit, String);
    
    RETURN_Ok(Unit(), cleanup);
cleanup:
    END_Result();
}

MAIN(run);
EOF
}

create_template() {
    file="$1"

    # todo: check suffix? oh bash.

    if [ -e "$file" ]; then
        warn "File '$file' already exists."
        return
    fi

    {
        cat <<END
#include <cj50.h>


END
        if [ $opt_old = 1 ]; then
            old
        else
            new
        fi
    } >> "$file"
}

for file in "$@"; do
    create_template "$file"
done

IFS=' '
$EDITOR "$@"
